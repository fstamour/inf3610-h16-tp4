-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2012.4
-- Copyright (C) 2012 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Sobel_thread is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    fifo_in_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fifo_in_0_empty_n : IN STD_LOGIC;
    fifo_in_0_read : OUT STD_LOGIC;
    fifo_out_0_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    fifo_out_0_full_n : IN STD_LOGIC;
    fifo_out_0_write : OUT STD_LOGIC );
end;


architecture behav of Sobel_thread is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv14_2 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000010";
    constant ap_const_lv14_3 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv14_1 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000001";
    constant ap_const_lv12_9C4 : STD_LOGIC_VECTOR (11 downto 0) := "100111000100";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv7_62 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv14_64 : STD_LOGIC_VECTOR (13 downto 0) := "00000001100100";
    constant ap_const_lv14_65 : STD_LOGIC_VECTOR (13 downto 0) := "00000001100101";
    constant ap_const_lv14_C8 : STD_LOGIC_VECTOR (13 downto 0) := "00000011001000";
    constant ap_const_lv14_C9 : STD_LOGIC_VECTOR (13 downto 0) := "00000011001001";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv14_66 : STD_LOGIC_VECTOR (13 downto 0) := "00000001100110";
    constant ap_const_lv14_CA : STD_LOGIC_VECTOR (13 downto 0) := "00000011001010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_37 : STD_LOGIC_VECTOR (7 downto 0) := "00110111";
    constant ap_const_lv8_9B : STD_LOGIC_VECTOR (7 downto 0) := "10011011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal Y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_356 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal Y_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Y_addr_8_reg_955 : STD_LOGIC_VECTOR (13 downto 0);
    signal exitcond6_fu_427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_46 : BOOLEAN;
    signal Y_addr_9_reg_960 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_1_fu_433_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_1_reg_968 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_reg_973 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_3_reg_978 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar1_cast_fu_475_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar1_cast_reg_983 : STD_LOGIC_VECTOR (13 downto 0);
    signal indvar_next1_fu_485_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_next1_reg_992 : STD_LOGIC_VECTOR (6 downto 0);
    signal next_mul_fu_491_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_mul_reg_997 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp8_fu_497_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp8_reg_1002 : STD_LOGIC_VECTOR (13 downto 0);
    signal index_assign_cast_fu_518_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal index_assign_cast_reg_1012 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_next_fu_528_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_next_reg_1020 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_0_1_reg_1035 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_weight_1_fu_640_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_1_reg_1060 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_1_fu_660_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_1_reg_1065 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_fu_700_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_2_reg_1080 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_4_cast_fu_746_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_weight_4_cast_reg_1085 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_weight_4_cast_fu_771_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_weight_4_cast_reg_1091 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_reg_1097 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1102 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_813_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_1107 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_reg_1112 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_fu_825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_6_reg_1118 : STD_LOGIC_VECTOR (0 downto 0);
    signal Sob_addr_1_reg_1123 : STD_LOGIC_VECTOR (13 downto 0);
    signal Sob_addr_2_reg_1128 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_3_fu_924_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_3_reg_1146 : STD_LOGIC_VECTOR (11 downto 0);
    signal Sob_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sob_load_reg_1151 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sob_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sob_load_1_reg_1156 : STD_LOGIC_VECTOR (7 downto 0);
    signal Y_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal Y_ce0 : STD_LOGIC;
    signal Y_we0 : STD_LOGIC;
    signal Y_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Y_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal Y_ce1 : STD_LOGIC;
    signal Y_we1 : STD_LOGIC;
    signal Y_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sob_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal Sob_ce0 : STD_LOGIC;
    signal Sob_we0 : STD_LOGIC;
    signal Sob_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Sob_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal Sob_ce1 : STD_LOGIC;
    signal i_reg_300 : STD_LOGIC_VECTOR (11 downto 0);
    signal indvar1_reg_311 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_reg_322 : STD_LOGIC_VECTOR (6 downto 0);
    signal exitcond5_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul_reg_333 : STD_LOGIC_VECTOR (13 downto 0);
    signal i_2_reg_344 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp136142_i_cast_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp137143_i_cast_fu_405_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp139144_i_cast_fu_422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_cast_fu_371_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_cast_fu_502_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_0_1_cast_fu_540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_0_2_cast_fu_550_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_1_cast_fu_560_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_1_2_cast_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_2_cast_fu_580_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_2_1_cast_fu_671_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_2_2_cast_fu_681_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp143149_i_cast_fu_879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp144150_i_cast_fu_896_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp146151_i_cast_fu_913_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i1_cast_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_439_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond4_fu_918_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_cast_fu_361_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_i_fu_365_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp136142_i9_fu_376_p5 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp137143_i_fu_393_p5 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp139144_i_fu_410_p5 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp1_fu_507_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal index_fu_513_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_0_1_fu_534_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_0_2_fu_545_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_1_fu_555_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_1_2_fu_565_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_2_fu_575_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_0_1_cast_fu_593_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_fu_596_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl_cast_fu_602_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_12_0_1_fu_606_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal y_weight_fu_616_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_0_cast_fu_589_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_0_2_cast_fu_626_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_0_cast1_fu_585_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_fu_630_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_weight_fu_616_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_0_2_cast1_fu_622_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_1_cast_fu_646_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl1_fu_650_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_1_fu_660_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_shl1_cast_fu_656_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp3_2_1_fu_666_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp3_2_2_fu_676_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_8_1_2_cast_fu_686_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_1_2_fu_690_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_10_1_2_cast_fu_696_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_2_cast_fu_709_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_2_1_cast_fu_718_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_12_2_1_fu_722_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal x_weight_3_fu_713_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_2_2_cast_fu_736_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal x_weight_4_fu_740_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_12_2_1_cast_fu_728_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_8_2_cast1_fu_705_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_8_2_2_cast1_fu_732_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp3_fu_755_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp11_cast_fu_761_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp2_fu_750_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal y_weight_2_fu_765_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal neg_i_cast_fu_791_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal neg7_i_cast_fu_802_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal abs9_i_fu_807_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal abs_i_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_843_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_fu_831_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_2_cast_fu_852_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_i1_fu_856_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp143149_i_fu_867_p5 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp144150_i_fu_884_p5 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp146151_i_fu_901_p5 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_Result_s_fu_930_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_933_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);

    component Sobel_thread_Y IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component Sobel_thread_Sob IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    Y_U : component Sobel_thread_Y
    generic map (
        DataWidth => 8,
        AddressRange => 10000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Y_address0,
        ce0 => Y_ce0,
        we0 => Y_we0,
        d0 => Y_d0,
        q0 => Y_q0,
        address1 => Y_address1,
        ce1 => Y_ce1,
        we1 => Y_we1,
        d1 => Y_d1,
        q1 => Y_q1);

    Sob_U : component Sobel_thread_Sob
    generic map (
        DataWidth => 8,
        AddressRange => 10000,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Sob_address0,
        ce0 => Sob_ce0,
        we0 => Sob_we0,
        d0 => Sob_d0,
        q0 => Sob_q0,
        address1 => Sob_address1,
        ce1 => Sob_ce1,
        q1 => Sob_q1);




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_reg assign process. --
    ap_reg_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
                Sob_addr_1_reg_1123 <= tmp143149_i_cast_fu_879_p1(14 - 1 downto 0);
            end if; 
            if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
                Sob_addr_2_reg_1128 <= tmp144150_i_cast_fu_896_p1(14 - 1 downto 0);
            end if; 
            if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
                Sob_load_1_reg_1156 <= Sob_q1;
            end if; 
            if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
                Sob_load_reg_1151 <= Sob_q0;
            end if; 
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not(ap_sig_bdd_46))) then 
                Y_addr_8_reg_955 <= tmp136142_i_cast_fu_388_p1(14 - 1 downto 0);
            end if; 
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not(ap_sig_bdd_46))) then 
                Y_addr_9_reg_960 <= tmp137143_i_cast_fu_405_p1(14 - 1 downto 0);
            end if; 
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not(ap_sig_bdd_46))) then 
                i_1_reg_968 <= i_1_fu_433_p2;
            end if; 
            if (((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_479_p2)))) then 
                i_2_reg_344 <= ap_const_lv12_0;
            elsif (((ap_ST_st17_fsm_16 = ap_CS_fsm) and not((fifo_out_0_full_n = ap_const_logic_0)))) then 
                i_2_reg_344 <= i_3_reg_1146;
            end if; 
            if ((ap_ST_st15_fsm_14 = ap_CS_fsm)) then 
                i_3_reg_1146 <= i_3_fu_924_p2;
            end if; 
            if ((ap_ST_st4_fsm_3 = ap_CS_fsm)) then 
                i_reg_300 <= ap_const_lv12_0;
            elsif ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
                i_reg_300 <= i_1_reg_968;
            end if; 
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
                index_assign_cast_reg_1012(0) <= index_assign_cast_fu_518_p1(0);
                index_assign_cast_reg_1012(1) <= index_assign_cast_fu_518_p1(1);
                index_assign_cast_reg_1012(2) <= index_assign_cast_fu_518_p1(2);
                index_assign_cast_reg_1012(3) <= index_assign_cast_fu_518_p1(3);
                index_assign_cast_reg_1012(4) <= index_assign_cast_fu_518_p1(4);
                index_assign_cast_reg_1012(5) <= index_assign_cast_fu_518_p1(5);
                index_assign_cast_reg_1012(6) <= index_assign_cast_fu_518_p1(6);
                index_assign_cast_reg_1012(7) <= index_assign_cast_fu_518_p1(7);
                index_assign_cast_reg_1012(8) <= index_assign_cast_fu_518_p1(8);
                index_assign_cast_reg_1012(9) <= index_assign_cast_fu_518_p1(9);
                index_assign_cast_reg_1012(10) <= index_assign_cast_fu_518_p1(10);
                index_assign_cast_reg_1012(11) <= index_assign_cast_fu_518_p1(11);
                index_assign_cast_reg_1012(12) <= index_assign_cast_fu_518_p1(12);
                index_assign_cast_reg_1012(13) <= index_assign_cast_fu_518_p1(13);
            end if; 
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
                indvar1_cast_reg_983(0) <= indvar1_cast_fu_475_p1(0);
                indvar1_cast_reg_983(1) <= indvar1_cast_fu_475_p1(1);
                indvar1_cast_reg_983(2) <= indvar1_cast_fu_475_p1(2);
                indvar1_cast_reg_983(3) <= indvar1_cast_fu_475_p1(3);
                indvar1_cast_reg_983(4) <= indvar1_cast_fu_475_p1(4);
                indvar1_cast_reg_983(5) <= indvar1_cast_fu_475_p1(5);
                indvar1_cast_reg_983(6) <= indvar1_cast_fu_475_p1(6);
            end if; 
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and not(ap_sig_bdd_46) and not((exitcond6_fu_427_p2 = ap_const_lv1_0)))) then 
                indvar1_reg_311 <= ap_const_lv7_0;
            elsif (((ap_ST_st8_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_522_p2)))) then 
                indvar1_reg_311 <= indvar_next1_reg_992;
            end if; 
            if ((ap_ST_st7_fsm_6 = ap_CS_fsm)) then 
                indvar_next1_reg_992 <= indvar_next1_fu_485_p2;
            end if; 
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
                indvar_next_reg_1020 <= indvar_next_fu_528_p2;
            end if; 
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
                indvar_reg_322 <= indvar_next_reg_1020;
            elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_479_p2))) then 
                indvar_reg_322 <= ap_const_lv7_0;
            end if; 
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
                next_mul_reg_997 <= next_mul_fu_491_p2;
            end if; 
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
                p_Result_2_reg_973 <= fifo_in_0_dout(23 downto 16);
            end if; 
            if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
                p_Result_3_reg_978 <= fifo_in_0_dout(31 downto 24);
            end if; 
            if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
                phi_mul_reg_333 <= next_mul_reg_997;
            elsif (((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_479_p2))) then 
                phi_mul_reg_333 <= ap_const_lv14_0;
            end if; 
            if ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then 
                reg_356 <= Y_q1;
            elsif ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
                reg_356 <= Y_q0;
            end if; 
            if ((ap_ST_st8_fsm_7 = ap_CS_fsm)) then 
                tmp8_reg_1002 <= tmp8_fu_497_p2;
            end if; 
            if ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
                tmp_0_1_reg_1035 <= Y_q1;
            end if; 
            if ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
                tmp_4_reg_1097 <= x_weight_4_fu_740_p2(10 downto 10);
            end if; 
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
                tmp_5_reg_1112 <= tmp_5_fu_819_p2;
            end if; 
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
                tmp_6_reg_1118 <= tmp_6_fu_825_p2;
            end if; 
            if ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
                tmp_8_reg_1102 <= y_weight_2_fu_765_p2(10 downto 10);
            end if; 
            if ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
                tmp_s_reg_1107 <= tmp_s_fu_813_p2;
            end if; 
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
                x_weight_1_reg_1065 <= x_weight_1_fu_660_p2;
            end if; 
            if ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then 
                x_weight_2_reg_1080 <= x_weight_2_fu_700_p2;
            end if; 
            if ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
                x_weight_4_cast_reg_1085 <= x_weight_4_cast_fu_746_p1;
            end if; 
            if ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
                y_weight_1_reg_1060 <= y_weight_1_fu_640_p2;
            end if; 
            if ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
                y_weight_4_cast_reg_1091 <= y_weight_4_cast_fu_771_p1;
            end if; 
        end if;
    end process;
    indvar1_cast_reg_983(13 downto 7) <= "0000000";
    index_assign_cast_reg_1012(31 downto 14) <= "000000000000000000";

    -- Sob_address0 assign process. --
    Sob_address0_assign_proc : process(ap_CS_fsm, index_assign_cast_reg_1012, Sob_addr_2_reg_1128, tmp_i1_cast_fu_862_p1, exitcond4_fu_918_p2)
    begin
        if ((ap_ST_st14_fsm_13 = ap_CS_fsm)) then 
            Sob_address0 <= index_assign_cast_reg_1012(14 - 1 downto 0);
        elsif ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
            Sob_address0 <= Sob_addr_2_reg_1128;
        elsif (((ap_ST_st15_fsm_14 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_918_p2))) then 
            Sob_address0 <= tmp_i1_cast_fu_862_p1(14 - 1 downto 0);
        else 
            Sob_address0 <= index_assign_cast_reg_1012(14 - 1 downto 0);
        end if; 
    end process;


    -- Sob_address1 assign process. --
    Sob_address1_assign_proc : process(ap_CS_fsm, Sob_addr_1_reg_1123, tmp146151_i_cast_fu_913_p1, exitcond4_fu_918_p2)
    begin
        if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
            Sob_address1 <= Sob_addr_1_reg_1123;
        elsif (((ap_ST_st15_fsm_14 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_918_p2))) then 
            Sob_address1 <= tmp146151_i_cast_fu_913_p1(14 - 1 downto 0);
        else 
            Sob_address1 <= tmp146151_i_cast_fu_913_p1(14 - 1 downto 0);
        end if; 
    end process;


    -- Sob_ce0 assign process. --
    Sob_ce0_assign_proc : process(ap_CS_fsm, exitcond4_fu_918_p2)
    begin
        if (((ap_ST_st16_fsm_15 = ap_CS_fsm) or (ap_ST_st14_fsm_13 = ap_CS_fsm) or ((ap_ST_st15_fsm_14 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_918_p2)))) then 
            Sob_ce0 <= ap_const_logic_1;
        else 
            Sob_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Sob_ce1 assign process. --
    Sob_ce1_assign_proc : process(ap_CS_fsm, exitcond4_fu_918_p2)
    begin
        if (((ap_ST_st16_fsm_15 = ap_CS_fsm) or ((ap_ST_st15_fsm_14 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_918_p2)))) then 
            Sob_ce1 <= ap_const_logic_1;
        else 
            Sob_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    Sob_d0 <= 
        tmp_7_fu_843_p1 when (tmp_9_fu_839_p2(0) = '1') else 
        edge_val_fu_831_p2;

    -- Sob_we0 assign process. --
    Sob_we0_assign_proc : process(ap_CS_fsm)
    begin
        if (((ap_ST_st14_fsm_13 = ap_CS_fsm))) then 
            Sob_we0 <= ap_const_logic_1;
        else 
            Sob_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Y_address0 assign process. --
    Y_address0_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46, Y_addr_9_reg_960, exitcond_fu_522_p2, tmp_i_cast_fu_371_p1, tmp8_cast_fu_502_p1, tmp3_0_2_cast_fu_550_p1, tmp3_1_2_cast_fu_570_p1, tmp3_2_1_cast_fu_671_p1)
    begin
        if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
            Y_address0 <= Y_addr_9_reg_960;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
            Y_address0 <= tmp_i_cast_fu_371_p1(14 - 1 downto 0);
        elsif ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then 
            Y_address0 <= tmp3_2_1_cast_fu_671_p1(14 - 1 downto 0);
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            Y_address0 <= tmp3_1_2_cast_fu_570_p1(14 - 1 downto 0);
        elsif ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            Y_address0 <= tmp3_0_2_cast_fu_550_p1(14 - 1 downto 0);
        elsif (((ap_ST_st8_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_522_p2))) then 
            Y_address0 <= tmp8_cast_fu_502_p1(14 - 1 downto 0);
        else 
            Y_address0 <= tmp_i_cast_fu_371_p1(14 - 1 downto 0);
        end if; 
    end process;


    -- Y_address1 assign process. --
    Y_address1_assign_proc : process(ap_CS_fsm, Y_addr_8_reg_955, exitcond6_fu_427_p2, ap_sig_bdd_46, exitcond_fu_522_p2, tmp139144_i_cast_fu_422_p1, tmp3_0_1_cast_fu_540_p1, tmp3_1_cast_fu_560_p1, tmp3_2_cast_fu_580_p1, tmp3_2_2_cast_fu_681_p1)
    begin
        if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
            Y_address1 <= Y_addr_8_reg_955;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
            Y_address1 <= tmp139144_i_cast_fu_422_p1(14 - 1 downto 0);
        elsif ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then 
            Y_address1 <= tmp3_2_2_cast_fu_681_p1(14 - 1 downto 0);
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            Y_address1 <= tmp3_2_cast_fu_580_p1(14 - 1 downto 0);
        elsif ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            Y_address1 <= tmp3_1_cast_fu_560_p1(14 - 1 downto 0);
        elsif (((ap_ST_st8_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_522_p2))) then 
            Y_address1 <= tmp3_0_1_cast_fu_540_p1(14 - 1 downto 0);
        else 
            Y_address1 <= tmp139144_i_cast_fu_422_p1(14 - 1 downto 0);
        end if; 
    end process;


    -- Y_ce0 assign process. --
    Y_ce0_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46, exitcond_fu_522_p2)
    begin
        if (((ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or ((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46)) or ((ap_ST_st8_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_522_p2)) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm))) then 
            Y_ce0 <= ap_const_logic_1;
        else 
            Y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Y_ce1 assign process. --
    Y_ce1_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46, exitcond_fu_522_p2)
    begin
        if (((ap_ST_st9_fsm_8 = ap_CS_fsm) or (ap_ST_st11_fsm_10 = ap_CS_fsm) or ((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46)) or ((ap_ST_st8_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_522_p2)) or (ap_ST_st10_fsm_9 = ap_CS_fsm) or (ap_ST_st6_fsm_5 = ap_CS_fsm))) then 
            Y_ce1 <= ap_const_logic_1;
        else 
            Y_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    -- Y_d0 assign process. --
    Y_d0_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46, p_Result_2_reg_973, tmp_3_fu_439_p1)
    begin
        if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
            Y_d0 <= p_Result_2_reg_973;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
            Y_d0 <= tmp_3_fu_439_p1;
        else 
            Y_d0 <= tmp_3_fu_439_p1;
        end if; 
    end process;


    -- Y_d1 assign process. --
    Y_d1_assign_proc : process(fifo_in_0_dout, ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46, p_Result_3_reg_978)
    begin
        if ((ap_ST_st6_fsm_5 = ap_CS_fsm)) then 
            Y_d1 <= p_Result_3_reg_978;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
            Y_d1 <= fifo_in_0_dout(15 downto 8);
        else 
            Y_d1 <= fifo_in_0_dout(15 downto 8);
        end if; 
    end process;


    -- Y_we0 assign process. --
    Y_we0_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46)
    begin
        if ((((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46)) or (ap_ST_st6_fsm_5 = ap_CS_fsm))) then 
            Y_we0 <= ap_const_logic_1;
        else 
            Y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    -- Y_we1 assign process. --
    Y_we1_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46)
    begin
        if ((((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46)) or (ap_ST_st6_fsm_5 = ap_CS_fsm))) then 
            Y_we1 <= ap_const_logic_1;
        else 
            Y_we1 <= ap_const_logic_0;
        end if; 
    end process;

    abs9_i_fu_807_p3 <= 
        neg7_i_cast_fu_802_p2 when (tmp_8_reg_1102(0) = '1') else 
        y_weight_4_cast_reg_1091;
    abs_i_fu_796_p3 <= 
        neg_i_cast_fu_791_p2 when (tmp_4_reg_1097(0) = '1') else 
        x_weight_4_cast_reg_1085;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process(fifo_out_0_full_n, ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46, exitcond_fu_522_p2, exitcond5_fu_479_p2, exitcond4_fu_918_p2)
    begin
        if ((ap_ST_st16_fsm_15 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st17_fsm_16;
        elsif (((ap_ST_st15_fsm_14 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond4_fu_918_p2))) then 
            ap_NS_fsm <= ap_ST_st16_fsm_15;
        elsif ((ap_ST_st13_fsm_12 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st14_fsm_13;
        elsif ((ap_ST_st12_fsm_11 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st13_fsm_12;
        elsif ((ap_ST_st11_fsm_10 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st12_fsm_11;
        elsif ((ap_ST_st10_fsm_9 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st11_fsm_10;
        elsif ((ap_ST_st9_fsm_8 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st10_fsm_9;
        elsif (((ap_ST_st8_fsm_7 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond_fu_522_p2))) then 
            ap_NS_fsm <= ap_ST_st9_fsm_8;
        elsif ((((ap_ST_st17_fsm_16 = ap_CS_fsm) and not((fifo_out_0_full_n = ap_const_logic_0))) or ((ap_ST_st7_fsm_6 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond5_fu_479_p2))))) then 
            ap_NS_fsm <= ap_ST_st15_fsm_14;
        elsif ((((ap_ST_st7_fsm_6 = ap_CS_fsm) and (ap_const_lv1_0 = exitcond5_fu_479_p2)) or (ap_ST_st14_fsm_13 = ap_CS_fsm))) then 
            ap_NS_fsm <= ap_ST_st8_fsm_7;
        elsif ((((ap_ST_st8_fsm_7 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond_fu_522_p2))) or ((ap_ST_st5_fsm_4 = ap_CS_fsm) and not(ap_sig_bdd_46) and not((exitcond6_fu_427_p2 = ap_const_lv1_0))))) then 
            ap_NS_fsm <= ap_ST_st7_fsm_6;
        elsif (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
            ap_NS_fsm <= ap_ST_st6_fsm_5;
        elsif (((ap_ST_st6_fsm_5 = ap_CS_fsm) or (ap_ST_st4_fsm_3 = ap_CS_fsm))) then 
            ap_NS_fsm <= ap_ST_st5_fsm_4;
        elsif (((ap_ST_st3_fsm_2 = ap_CS_fsm) or ((ap_ST_st15_fsm_14 = ap_CS_fsm) and not((ap_const_lv1_0 = exitcond4_fu_918_p2))))) then 
            ap_NS_fsm <= ap_ST_st4_fsm_3;
        elsif ((ap_ST_st2_fsm_1 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st3_fsm_2;
        elsif ((ap_ST_st1_fsm_0 = ap_CS_fsm)) then 
            ap_NS_fsm <= ap_ST_st2_fsm_1;
        else 
            ap_NS_fsm <= ap_CS_fsm;
        end if; 
    end process;


    -- ap_sig_bdd_46 assign process. --
    ap_sig_bdd_46_assign_proc : process(fifo_in_0_empty_n, exitcond6_fu_427_p2)
    begin
                ap_sig_bdd_46 <= ((fifo_in_0_empty_n = ap_const_logic_0) and (exitcond6_fu_427_p2 = ap_const_lv1_0));
    end process;

    edge_val_fu_831_p2 <= (tmp_s_reg_1107 xor ap_const_lv8_FF);
    exitcond4_fu_918_p2 <= "1" when (i_2_reg_344 = ap_const_lv12_9C4) else "0";
    exitcond5_fu_479_p2 <= "1" when (indvar1_reg_311 = ap_const_lv7_62) else "0";
    exitcond6_fu_427_p2 <= "1" when (i_reg_300 = ap_const_lv12_9C4) else "0";
    exitcond_fu_522_p2 <= "1" when (indvar_reg_322 = ap_const_lv7_62) else "0";

    -- fifo_in_0_read assign process. --
    fifo_in_0_read_assign_proc : process(ap_CS_fsm, exitcond6_fu_427_p2, ap_sig_bdd_46)
    begin
        if (((ap_ST_st5_fsm_4 = ap_CS_fsm) and (exitcond6_fu_427_p2 = ap_const_lv1_0) and not(ap_sig_bdd_46))) then 
            fifo_in_0_read <= ap_const_logic_1;
        else 
            fifo_in_0_read <= ap_const_logic_0;
        end if; 
    end process;

    fifo_out_0_din <= (tmp_2_fu_933_p4 & p_Result_s_fu_930_p1(7 downto 0));

    -- fifo_out_0_write assign process. --
    fifo_out_0_write_assign_proc : process(fifo_out_0_full_n, ap_CS_fsm)
    begin
        if (((ap_ST_st17_fsm_16 = ap_CS_fsm) and not((fifo_out_0_full_n = ap_const_logic_0)))) then 
            fifo_out_0_write <= ap_const_logic_1;
        else 
            fifo_out_0_write <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_433_p2 <= std_logic_vector(unsigned(i_reg_300) + unsigned(ap_const_lv12_1));
    i_2_cast_fu_852_p1 <= std_logic_vector(resize(unsigned(i_2_reg_344),14));
    i_3_fu_924_p2 <= std_logic_vector(unsigned(i_2_reg_344) + unsigned(ap_const_lv12_1));
    i_cast_fu_361_p1 <= std_logic_vector(resize(unsigned(i_reg_300),14));
    index_assign_cast_fu_518_p1 <= std_logic_vector(resize(unsigned(index_fu_513_p2),32));
    index_fu_513_p2 <= std_logic_vector(unsigned(tmp1_fu_507_p2) + unsigned(indvar1_cast_reg_983));
    indvar1_cast_fu_475_p1 <= std_logic_vector(resize(unsigned(indvar1_reg_311),14));
    indvar_next1_fu_485_p2 <= std_logic_vector(unsigned(indvar1_reg_311) + unsigned(ap_const_lv7_1));
    indvar_next_fu_528_p2 <= std_logic_vector(unsigned(indvar_reg_322) + unsigned(ap_const_lv7_1));
    neg7_i_cast_fu_802_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(y_weight_4_cast_reg_1091));
    neg_i_cast_fu_791_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(x_weight_4_cast_reg_1085));
    next_mul_fu_491_p2 <= std_logic_vector(unsigned(phi_mul_reg_333) + unsigned(ap_const_lv14_64));
    p_Result_s_fu_930_p1 <= std_logic_vector(resize(unsigned(Sob_load_reg_1151),32));
    p_shl1_cast_fu_656_p1 <= std_logic_vector(resize(unsigned(p_shl1_fu_650_p2),11));
    p_shl1_fu_650_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_1_cast_fu_646_p1),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    p_shl_cast_fu_602_p1 <= std_logic_vector(resize(unsigned(p_shl_fu_596_p2),10));
    p_shl_fu_596_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_0_1_cast_fu_593_p1),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    tmp11_cast_fu_761_p1 <= std_logic_vector(resize(unsigned(tmp3_fu_755_p2),11));
    tmp136142_i9_fu_376_p5 <= (i_reg_300 & ap_const_lv14_3(1 downto 0));
    tmp136142_i_cast_fu_388_p1 <= std_logic_vector(resize(unsigned(tmp136142_i9_fu_376_p5),32));
    tmp137143_i_cast_fu_405_p1 <= std_logic_vector(resize(unsigned(tmp137143_i_fu_393_p5),32));
    tmp137143_i_fu_393_p5 <= (i_reg_300 & ap_const_lv14_2(1 downto 0));
    tmp139144_i_cast_fu_422_p1 <= std_logic_vector(resize(unsigned(tmp139144_i_fu_410_p5),32));
    tmp139144_i_fu_410_p5 <= (i_reg_300 & ap_const_lv14_1(1 downto 0));
    tmp143149_i_cast_fu_879_p1 <= std_logic_vector(resize(unsigned(tmp143149_i_fu_867_p5),32));
    tmp143149_i_fu_867_p5 <= (i_2_reg_344 & ap_const_lv14_3(1 downto 0));
    tmp144150_i_cast_fu_896_p1 <= std_logic_vector(resize(unsigned(tmp144150_i_fu_884_p5),32));
    tmp144150_i_fu_884_p5 <= (i_2_reg_344 & ap_const_lv14_2(1 downto 0));
    tmp146151_i_cast_fu_913_p1 <= std_logic_vector(resize(unsigned(tmp146151_i_fu_901_p5),32));
    tmp146151_i_fu_901_p5 <= (i_2_reg_344 & ap_const_lv14_1(1 downto 0));
    tmp1_fu_507_p2 <= std_logic_vector(unsigned(phi_mul_reg_333) + unsigned(ap_const_lv14_65));
    tmp2_fu_750_p2 <= std_logic_vector(unsigned(y_weight_1_reg_1060) + unsigned(tmp_12_2_1_cast_fu_728_p1));
    tmp3_0_1_cast_fu_540_p1 <= std_logic_vector(resize(unsigned(tmp3_0_1_fu_534_p2),32));
    tmp3_0_1_fu_534_p2 <= std_logic_vector(unsigned(tmp8_fu_497_p2) + unsigned(ap_const_lv14_64));
    tmp3_0_2_cast_fu_550_p1 <= std_logic_vector(resize(unsigned(tmp3_0_2_fu_545_p2),32));
    tmp3_0_2_fu_545_p2 <= std_logic_vector(unsigned(tmp8_reg_1002) + unsigned(ap_const_lv14_C8));
    tmp3_1_2_cast_fu_570_p1 <= std_logic_vector(resize(unsigned(tmp3_1_2_fu_565_p2),32));
    tmp3_1_2_fu_565_p2 <= std_logic_vector(unsigned(tmp8_reg_1002) + unsigned(ap_const_lv14_C9));
    tmp3_1_cast_fu_560_p1 <= std_logic_vector(resize(unsigned(tmp3_1_fu_555_p2),32));
    tmp3_1_fu_555_p2 <= std_logic_vector(unsigned(tmp8_reg_1002) + unsigned(ap_const_lv14_1));
    tmp3_2_1_cast_fu_671_p1 <= std_logic_vector(resize(unsigned(tmp3_2_1_fu_666_p2),32));
    tmp3_2_1_fu_666_p2 <= std_logic_vector(unsigned(tmp8_reg_1002) + unsigned(ap_const_lv14_66));
    tmp3_2_2_cast_fu_681_p1 <= std_logic_vector(resize(unsigned(tmp3_2_2_fu_676_p2),32));
    tmp3_2_2_fu_676_p2 <= std_logic_vector(unsigned(tmp8_reg_1002) + unsigned(ap_const_lv14_CA));
    tmp3_2_cast_fu_580_p1 <= std_logic_vector(resize(unsigned(tmp3_2_fu_575_p2),32));
    tmp3_2_fu_575_p2 <= std_logic_vector(unsigned(tmp8_reg_1002) + unsigned(ap_const_lv14_2));
    tmp3_fu_755_p2 <= std_logic_vector(unsigned(tmp_8_2_cast1_fu_705_p1) + unsigned(tmp_8_2_2_cast1_fu_732_p1));
    tmp8_cast_fu_502_p1 <= std_logic_vector(resize(unsigned(tmp8_fu_497_p2),32));
    tmp8_fu_497_p2 <= std_logic_vector(unsigned(indvar1_cast_reg_983) + unsigned(phi_mul_reg_333));
    tmp_10_1_2_cast_fu_696_p1 <= std_logic_vector(resize(unsigned(tmp_10_1_2_fu_690_p2),11));
    tmp_10_1_2_fu_690_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_1_2_cast_fu_686_p1),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    tmp_12_0_1_fu_606_p2 <= std_logic_vector(unsigned(ap_const_lv10_0) - unsigned(p_shl_cast_fu_602_p1));
    tmp_12_2_1_cast_fu_728_p1 <= std_logic_vector(resize(unsigned(tmp_12_2_1_fu_722_p2),11));
    tmp_12_2_1_fu_722_p2 <= std_logic_vector(shift_left(unsigned(tmp_8_2_1_cast_fu_718_p1),to_integer(unsigned('0' & ap_const_lv9_1(9-1 downto 0)))));
    tmp_2_fu_933_p4 <= ((Sob_q1 & Sob_q0) & Sob_load_1_reg_1156);
    tmp_3_fu_439_p1 <= fifo_in_0_dout(8 - 1 downto 0);
    tmp_5_fu_819_p2 <= "1" when (unsigned(tmp_s_fu_813_p2) < unsigned(ap_const_lv8_37)) else "0";
    tmp_6_fu_825_p2 <= "1" when (unsigned(tmp_s_fu_813_p2) > unsigned(ap_const_lv8_9B)) else "0";
    tmp_7_fu_843_p1 <= std_logic_vector(resize(signed(tmp_5_reg_1112),8));
    tmp_8_0_1_cast_fu_593_p1 <= std_logic_vector(resize(unsigned(tmp_0_1_reg_1035),9));
    tmp_8_0_2_cast1_fu_622_p1 <= std_logic_vector(resize(unsigned(Y_q0),11));
    tmp_8_0_2_cast_fu_626_p1 <= std_logic_vector(resize(unsigned(Y_q0),9));
    tmp_8_0_cast1_fu_585_p1 <= std_logic_vector(resize(unsigned(reg_356),9));
    tmp_8_0_cast_fu_589_p1 <= std_logic_vector(resize(unsigned(reg_356),11));
    tmp_8_1_2_cast_fu_686_p1 <= std_logic_vector(resize(unsigned(Y_q0),9));
    tmp_8_1_cast_fu_646_p1 <= std_logic_vector(resize(unsigned(Y_q1),9));
    tmp_8_2_1_cast_fu_718_p1 <= std_logic_vector(resize(unsigned(Y_q0),9));
    tmp_8_2_2_cast1_fu_732_p1 <= std_logic_vector(resize(unsigned(Y_q1),9));
    tmp_8_2_2_cast_fu_736_p1 <= std_logic_vector(resize(unsigned(Y_q1),11));
    tmp_8_2_cast1_fu_705_p1 <= std_logic_vector(resize(unsigned(reg_356),9));
    tmp_8_2_cast_fu_709_p1 <= std_logic_vector(resize(unsigned(reg_356),11));
    tmp_9_fu_839_p2 <= (tmp_5_reg_1112 or tmp_6_reg_1118);
    tmp_i1_cast_fu_862_p1 <= std_logic_vector(resize(unsigned(tmp_i1_fu_856_p2),32));
    tmp_i1_fu_856_p2 <= std_logic_vector(shift_left(unsigned(i_2_cast_fu_852_p1),to_integer(unsigned('0' & ap_const_lv14_2(14-1 downto 0)))));
    tmp_i_cast_fu_371_p1 <= std_logic_vector(resize(unsigned(tmp_i_fu_365_p2),32));
    tmp_i_fu_365_p2 <= std_logic_vector(shift_left(unsigned(i_cast_fu_361_p1),to_integer(unsigned('0' & ap_const_lv14_2(14-1 downto 0)))));
    tmp_s_fu_813_p2 <= std_logic_vector(unsigned(abs9_i_fu_807_p3) + unsigned(abs_i_fu_796_p3));
    x_weight_1_fu_660_p0 <= std_logic_vector(resize(signed(x_weight_fu_630_p2),11));
    x_weight_1_fu_660_p2 <= std_logic_vector(unsigned(x_weight_1_fu_660_p0) - unsigned(p_shl1_cast_fu_656_p1));
    x_weight_2_fu_700_p2 <= std_logic_vector(unsigned(tmp_10_1_2_cast_fu_696_p1) + unsigned(x_weight_1_reg_1065));
    x_weight_3_fu_713_p2 <= std_logic_vector(unsigned(x_weight_2_reg_1080) - unsigned(tmp_8_2_cast_fu_709_p1));
    x_weight_4_cast_fu_746_p1 <= x_weight_4_fu_740_p2(8 - 1 downto 0);
    x_weight_4_fu_740_p2 <= std_logic_vector(unsigned(x_weight_3_fu_713_p2) + unsigned(tmp_8_2_2_cast_fu_736_p1));
    x_weight_fu_630_p2 <= std_logic_vector(unsigned(tmp_8_0_2_cast_fu_626_p1) - unsigned(tmp_8_0_cast1_fu_585_p1));
    y_weight_1_fu_640_p2 <= std_logic_vector(unsigned(y_weight_fu_616_p2) - unsigned(tmp_8_0_2_cast1_fu_622_p1));
    y_weight_2_fu_765_p2 <= std_logic_vector(unsigned(tmp11_cast_fu_761_p1) + unsigned(tmp2_fu_750_p2));
    y_weight_4_cast_fu_771_p1 <= y_weight_2_fu_765_p2(8 - 1 downto 0);
    y_weight_fu_616_p0 <= std_logic_vector(resize(signed(tmp_12_0_1_fu_606_p2),11));
    y_weight_fu_616_p2 <= std_logic_vector(unsigned(y_weight_fu_616_p0) - unsigned(tmp_8_0_cast_fu_589_p1));
end behav;
